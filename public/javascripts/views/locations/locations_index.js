// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Mapish.Views.LocationsIndex = (function(_super) {
    __extends(LocationsIndex, _super);

    function LocationsIndex() {
      _ref = LocationsIndex.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LocationsIndex.prototype.template = JST['locations/index'];

    LocationsIndex.prototype.events = {
      'submit #new_location': 'createLocation'
    };

    LocationsIndex.prototype.initialize = function() {
      this.collection.on('reset', this.render, this);
      return this.collection.on('add', this.appendLocation, this);
    };

    LocationsIndex.prototype.render = function() {
      $(this.el).html(this.template());
      this.collection.each(this.appendLocation);
      return this;
    };

    LocationsIndex.prototype.appendLocation = function(location) {
      var view;
      if (location.isNew()) {
        location = location.get('locations')[0];
      } else {
        location = location.toJSON();
      }
      view = new Mapish.Views.Location({
        model: location
      });
      return $('#locations').append(view.render().el);
    };

    LocationsIndex.prototype.createLocation = function(event) {
      event.preventDefault();
      this.collection.create({
        name: $('#new_location_name').val(),
        address: $('#new_location_address').val()
      }, {
        wait: true
      });
      return $('#new_location')[0].reset();
    };

    return LocationsIndex;

  })(Backbone.View);

}).call(this);
